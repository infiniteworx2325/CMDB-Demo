@model AssetManagementSystem.Models.Software

@{
    ViewBag.Title = "Edit";
}

<style>
    @@media only screen and (max-width: 467px) {
        .form-horizontal {
            margin-top: 150px;
            margin-left: 94px;
        }
    }
</style><link href="~/Content/sites.css" rel="stylesheet" />
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4 style="font-weight:bold;font-size:20px;">Update Software details</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @*<div class="form-group">
            @Html.LabelFor(model => model.assetId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.assetId, new { htmlAttributes = new { @class = "form-control", @maxlength = "10" } })
                @Html.ValidationMessageFor(model => model.assetId, "", new { @class = "text-danger" })
            </div>
        </div>*@

        @*<div class="form-group">
            @Html.LabelFor(model => model.resourceId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.resourceId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.resourceId, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.assetCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.assetCode, new { htmlAttributes = new { @class = "form-control", @maxlength = "30" } })
                @Html.ValidationMessageFor(model => model.assetCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.assetName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.assetName, new { htmlAttributes = new { @class = "form-control", @maxlength = "30" } })
                @Html.ValidationMessageFor(model => model.assetName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.shortName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.shortName, new { htmlAttributes = new { @class = "form-control", @maxlength = "20" } })
                @Html.ValidationMessageFor(model => model.shortName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control", @maxlength = "256" } })
                @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.serialNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.serialNo, new { htmlAttributes = new { @class = "form-control", @maxlength = "30" } })
                @Html.ValidationMessageFor(model => model.serialNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.softwareVersion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.softwareVersion, new { htmlAttributes = new { @class = "form-control", @maxlength = "30" } })
                @Html.ValidationMessageFor(model => model.softwareVersion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.softwareType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.softwareType, new { htmlAttributes = new { @class = "form-control", @maxlength = "20" } })
                @Html.ValidationMessageFor(model => model.softwareType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.licenceClass, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.licenceClass, new { htmlAttributes = new { @class = "form-control", @maxlength = "30" } })
                @Html.ValidationMessageFor(model => model.licenceClass, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.licenceNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.licenceNumber, new { htmlAttributes = new { @class = "form-control", @maxlength = "30" } })
                @Html.ValidationMessageFor(model => model.licenceNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.licenceKey, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.licenceKey, new { htmlAttributes = new { @class = "form-control", @maxlength = "30" } })
                @Html.ValidationMessageFor(model => model.licenceKey, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.warrantyPeriod, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.warrantyPeriod, new { htmlAttributes = new { @class = "form-control", @min = 0 } })
                @Html.ValidationMessageFor(model => model.warrantyPeriod, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.vendorName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.vendorName, new { htmlAttributes = new { @class = "form-control", @maxlength = "30" } })
                @Html.ValidationMessageFor(model => model.vendorName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.vendorContact, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.vendorContact, new { htmlAttributes = new { @class = "form-control", @maxlength = "10" } })
                @Html.ValidationMessageFor(model => model.vendorContact, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.vendorEmail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.vendorEmail, new { htmlAttributes = new { @class = "form-control", @maxlength = "50" } })
                @Html.ValidationMessageFor(model => model.vendorEmail, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.createdDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.createdDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.createdDate, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.isActive, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.isActive)
                    @Html.ValidationMessageFor(model => model.isActive, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>*@

        @*<div class="form-group">
            @Html.LabelFor(model => model.isDeleted, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.isDeleted)
                    @Html.ValidationMessageFor(model => model.isDeleted, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Update"class="button-css"  />
                <span style="margin-left:5px">
                    <input type="button" class="button-css" id="btnBack" value="Back" style="margin-top:5px;" onclick="location.href='@Url.Action("Softwares", "Software",new { area="Asset"})';return false;" />

                </span>
            </div>
        </div>
    </div>
}

@*<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script>
   

     $(document).ready(function () {
        if ('@ViewBag.Msg' != "")
        {

           alert('@ViewBag.Msg');

           $('#assetCode').val("");
           $('#assetName').val("");
           $('#shortName').val("");
            $('#contactNo').val("");
            $('#emailId').val("");
            location.href = "@Url.Action("Softwares","Software",new { area="Asset"})";
        }


    });

    $("#vendorContact").keypress(function (e) {
        if (String.fromCharCode(e.which).match(/[^0-9_ ]/)) {
            e.preventDefault();
            alert("Enter a number");
        }
    });
    $("#warrantyPeriod").keypress(function (e) {
        if (String.fromCharCode(e.which).match(/[^0-9_ ]/)) {
            e.preventDefault();
            alert("warranty should be upto two digits");
        }
    });
    $("#assetCode, #assetName").keypress(function (e) {
        if (String.fromCharCode(e.which).match(/[^a-zA-Z0-9_ ]/)) {
            e.preventDefault();
            alert("Enter alphanumeric only");
        }
    });
    $("#vendorName,#softwareType,#licenceClass").keypress(function (e) {
        if (String.fromCharCode(e.which).match(/[^a-zA-Z_ ]/)) {
            e.preventDefault();
            alert("Enter alphabets only");
        }
    });

</script>